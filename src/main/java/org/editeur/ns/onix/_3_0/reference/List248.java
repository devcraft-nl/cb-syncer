//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2025.05.27 at 10:08:36 AM CEST 
//


package org.editeur.ns.onix._3_0.reference;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for List248.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="List248"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="A411"/&gt;
 *     &lt;enumeration value="A412"/&gt;
 *     &lt;enumeration value="A413"/&gt;
 *     &lt;enumeration value="A416"/&gt;
 *     &lt;enumeration value="A418"/&gt;
 *     &lt;enumeration value="A424"/&gt;
 *     &lt;enumeration value="A425"/&gt;
 *     &lt;enumeration value="B001"/&gt;
 *     &lt;enumeration value="B002"/&gt;
 *     &lt;enumeration value="B003"/&gt;
 *     &lt;enumeration value="B004"/&gt;
 *     &lt;enumeration value="B005"/&gt;
 *     &lt;enumeration value="B006"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "List248")
@XmlEnum
public enum List248 {

    @XmlEnumValue("A411")
    A_411("A411"),

    /**
     *  44,100 samples per channel per second (CD quality)
     * 
     */
    @XmlEnumValue("A412")
    A_412("A412"),
    @XmlEnumValue("A413")
    A_413("A413"),

    /**
     * Bit depth, 16 bits per sample (CD-quality)
     * 
     */
    @XmlEnumValue("A416")
    A_416("A416"),
    @XmlEnumValue("A418")
    A_418("A418"),

    /**
     * Includes v1.1
     * 
     */
    @XmlEnumValue("A424")
    A_424("A424"),
    @XmlEnumValue("A425")
    A_425("A425"),

    /**
     * Grain of paper parallel to spine
     * 
     */
    @XmlEnumValue("B001")
    B_001("B001"),

    /**
     * Grain of paper perpendicular to spine
     * 
     */
    @XmlEnumValue("B002")
    B_002("B002"),

    /**
     * Usually B/W
     * 
     */
    @XmlEnumValue("B003")
    B_003("B003"),
    @XmlEnumValue("B004")
    B_004("B004"),

    /**
     * Printed ‘premium’ or high-fidelity / high resolution CMYK (where different from ‘Printed CMYK’, and the manufacturer offers two quality settings)
     * 
     */
    @XmlEnumValue("B005")
    B_005("B005"),

    /**
     * At least some content bleeds to or beyond trimmed page edge
     * 
     */
    @XmlEnumValue("B006")
    B_006("B006");
    private final String value;

    List248(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static List248 fromValue(String v) {
        for (List248 c: List248 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
